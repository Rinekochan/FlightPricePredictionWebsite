{"ast":null,"code":"var _jsxFileName = \"/Users/deesethi/Documents/Swinburne/Innovation Project/Webpage/FlightPricePredictionWebsite/src/components/shared/NavBar/ToolBar.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { AirplanemodeActive as AirplanemodeActiveIcon } from '@mui/icons-material';\nimport NavDrawer from './NavDrawer';\nimport NavButton from './NavButton';\nimport { Link } from 'react-router-dom';\nimport { Toolbar, Typography, Box, useMediaQuery } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToolBar() {\n  _s();\n  const isMobile = useMediaQuery(theme => theme.breakpoints.down('md')); // Adjust according to your breakpoint\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: Link,\n      to: \"/\",\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        textDecoration: 'none',\n        color: 'inherit',\n        flexGrow: isMobile ? 1 : 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(AirplanemodeActiveIcon, {\n        sx: {\n          ml: 5,\n          mr: 1.5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Kamikaze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), isMobile ?\n    /*#__PURE__*/\n    // If the screen size is as small as mobile screen, show drawer\n    _jsxDEV(NavDrawer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }, this) :\n    /*#__PURE__*/\n    // else show normal buttons\n    _jsxDEV(NavButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(ToolBar, \"7khsyUHgctuHIPa2/KlDS6LcnT0=\", false, function () {\n  return [useMediaQuery];\n});\n_c = ToolBar;\nexport default ToolBar;\nvar _c;\n$RefreshReg$(_c, \"ToolBar\");","map":{"version":3,"names":["React","AirplanemodeActive","AirplanemodeActiveIcon","NavDrawer","NavButton","Link","Toolbar","Typography","Box","useMediaQuery","jsxDEV","_jsxDEV","ToolBar","_s","isMobile","theme","breakpoints","down","children","component","to","sx","display","alignItems","textDecoration","color","flexGrow","ml","mr","fileName","_jsxFileName","lineNumber","columnNumber","variant","_c","$RefreshReg$"],"sources":["/Users/deesethi/Documents/Swinburne/Innovation Project/Webpage/FlightPricePredictionWebsite/src/components/shared/NavBar/ToolBar.jsx"],"sourcesContent":["import React from 'react'\nimport {\n    AirplanemodeActive as AirplanemodeActiveIcon,\n} from '@mui/icons-material';\nimport NavDrawer from './NavDrawer';\nimport NavButton from './NavButton';\nimport { Link } from 'react-router-dom';\nimport {\n    Toolbar, Typography, Box, useMediaQuery\n} from '@mui/material';\n\nfunction ToolBar() {\n    const isMobile = useMediaQuery((theme) => theme.breakpoints.down('md')); // Adjust according to your breakpoint\n    return (\n        <Toolbar>\n            <Box component={Link} to=\"/\" sx={{ display: 'flex', alignItems: 'center', textDecoration: 'none', color: 'inherit', flexGrow: isMobile ? 1 : 0 }}>\n                <AirplanemodeActiveIcon sx={{ ml: 5, mr: 1.5 }} />\n                <Typography variant=\"h6\">\n                    Kamikaze\n                </Typography>\n            </Box>\n            {\n                isMobile ?\n                    ( // If the screen size is as small as mobile screen, show drawer\n                        <NavDrawer />\n                    ) : ( // else show normal buttons\n                        <NavButton />\n                    )\n            }\n        </Toolbar>\n    )\n}\n\nexport default ToolBar\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,kBAAkB,IAAIC,sBAAsB,QACzC,qBAAqB;AAC5B,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SACIC,OAAO,EAAEC,UAAU,EAAEC,GAAG,EAAEC,aAAa,QACpC,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGL,aAAa,CAAEM,KAAK,IAAKA,KAAK,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACzE,oBACIN,OAAA,CAACL,OAAO;IAAAY,QAAA,gBACJP,OAAA,CAACH,GAAG;MAACW,SAAS,EAAEd,IAAK;MAACe,EAAE,EAAC,GAAG;MAACC,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,cAAc,EAAE,MAAM;QAAEC,KAAK,EAAE,SAAS;QAAEC,QAAQ,EAAEZ,QAAQ,GAAG,CAAC,GAAG;MAAE,CAAE;MAAAI,QAAA,gBAC7IP,OAAA,CAACT,sBAAsB;QAACmB,EAAE,EAAE;UAAEM,EAAE,EAAE,CAAC;UAAEC,EAAE,EAAE;QAAI;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDrB,OAAA,CAACJ,UAAU;QAAC0B,OAAO,EAAC,IAAI;QAAAf,QAAA,EAAC;MAEzB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,EAEFlB,QAAQ;IAAA;IACF;IACEH,OAAA,CAACR,SAAS;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAA;IACX;IACFrB,OAAA,CAACP,SAAS;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACf;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAElB;AAACnB,EAAA,CApBQD,OAAO;EAAA,QACKH,aAAa;AAAA;AAAAyB,EAAA,GADzBtB,OAAO;AAsBhB,eAAeA,OAAO;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}